#!/bin/tcsh -f
#----------------------
#MOAB Batch Directives
#PBS -N frepp.pcmdi_metrics_v1p1p1.atmos.csh
#PBS -l walltime=4:00:00
#PBS -l size=1
#PBS -j oe
#PBS -o /home/Huan.Guo/awg/warsaw/c96L33_am4p0_cmip6Diag/gfdl.ncrc4-intel-prod-openmp/scripts/analysis/frepp.pcmdi_metrics_v1p1p1.atmos.csh.1980-2014.2131452931.printout
#PBS -r y
#------------------------
# SGE Batch Directives
#$ -l h_cpu=4:00:00
#$ -pe ic.postp 2
#$ -j y
#$ -o /home/Huan.Guo/awg/warsaw/c96L33_am4p0_cmip6Diag/gfdl.ncrc4-intel-prod-openmp/scripts/analysis/frepp.pcmdi_metrics_v1p1p1.atmos.csh.1980-2014.2131452931.printout
#$ -r y
#------------------------
#
# NAME
#    frepp.pcmdi_metric_v1p1p1.atmos.csh
#
# SYNOPSIS
#    use frepp to run version v1p1p1 of pcmdi metrics package on an experiment's atmos output
#
# DESCRIPTION
#    Creates scalar statistics from atmospheric data. This script is just
#    a simple wrapper around a few python scripts. We will eliminate as 
#    many options as possible by passing values in from frepp.
#
# INCLUDED SCRIPTS
#  -createXmlAndNcs.py
#    This script will create an XML that will allow us to convert GFDL
#    variable names to CMIP5 variable names that are needed to run the main
#    script.
# 
#  -wgne_metrics_driver.py
#    This script will run the main metrics caluclations and interpolate
#    our model and obs data to the same grid.
#
#  -wgne_input_parameters.py
#    This script will be created by this script and be used for the 
#    variables needed for the main metrics package
# 
# SOURCE DATA
#    pp/${compnonent}/av/monthly_*
#
# OUTPUT
#    Creates metrics JSON files and interpolated climatologies in
#       ${out_dir}/atmos_${yr1}_${yr2}/pcmdi_metrics/ 
#
# SAMPLE FREPP USAGE
#  
#  <component type="atmos">
#    <timeAverage source="monthly" interval="20yr">
#      <analysis script="frepp.pcmdi_metrics.csh"/>
#    </timeAverage>
#  </component>

set name = `basename $0`

# Unload potential conflicting modules
#--------------------------------------
source $MODULESHOME/init/csh
module load fre/bronx-12
module load fre-analysis
module load gcp

# Set paths to the python environment
#------------------------
source /home/Oar.Gfdl.Mdteam/python_envs/PMP-nox/bin/activate.csh

# ---------------- VARIABLES SET BY FREPP ----------------
# originial arguments passed to the this script
set argu = (-c amip)
# path to NetCDF files postprocessed by frepp, as specified in the  XML
set in_data_dir = /archive/Huan.Guo/awg/warsaw/c96L33_am4p0_cmip6Diag/gfdl.ncrc4-intel-prod-openmp/pp/atmos_cmip/av/monthly_35yr/
# input data file[s], without any path prefix;
# currently only used by timeAverage diagnostics
set in_data_file = atmos_cmip.1980-2014.{01,02,03,04,05,06,07,08,09,10,11,12}.nc
# experiment name (as appears in output directory names).
set descriptor = AM4.0 
# final output directory for diagnostics generated by this script
set out_dir = /nbhome/a1r/awg/warsaw-repro-test/AM4.0/
# working directory -- do whatever you want in here
# we may have to create this (use "mkdir -p" to be sure)
# and then clean up at end.
set WORKDIR = $TMPDIR/awg/warsaw/c96L33_am4p0_cmip6Diag/gfdl.ncrc4-intel-prod-openmp/c96L33_am4p0_cmip6Diag_20140101/work
# history directory where the original "*.nc.cpio" files are located.
set hist_dir = /archive/Huan.Guo/awg/warsaw/c96L33_am4p0_cmip6Diag/gfdl.ncrc4-intel-prod-openmp/history
#actual start/end years of diagnostics (start_year & end_year in XML).
set yr1 = 1980
set yr2 = 2014
# alternative way to specify a single year (instead of yr1==yr2).
set specify_year

# Data years, only used in scripts using time series as input, to
# generate a Ferret descriptor file from consecutive NetCDF chunks.
# start year of first chunk
set databegyr = 1980
# end year of last chunk
set dataendyr = 2014
# chunk length (an integer number), as specified in XML
set datachunk = 35
# first year of integration (4-digits, e.g. the year of initial condition)
set MODEL_start_yr = 1980
# full path to the grid specification file, which contains the land/sea mask
set gridspecfile = /archive/h1g/mdt/awg/input/grid/c96_OM4_025_grid_No_mg_drag_v20160808.tar
# atmospheric land mask file
set staticfile = /archive/Huan.Guo/awg/warsaw/c96L33_am4p0_cmip6Diag/gfdl.ncrc4-intel-prod-openmp/pp/atmos_cmip/atmos_cmip.static.nc
# Set experiment triples
set experID = 0
set realizID = 
set runID = 
set tripleID = 0
# ============== END OF VARIABLES SET BY FREPP =============

set realm = `echo ${in_data_dir} | rev | cut -d'/' -f4 | rev` # NOT SET BY FREPP YET
set pcmdi_version = "v1p1p1"
set model = 'GFDL_Model' # NOT SET BY FREPP YET
set rip   = 'r1i1p1' # NOT SET BY FREPP YET

# If any arguments were supplied on the command line, then those
# will replace the original frepp-supplied arguments.
if ($#argv) set argu = ($argv:q)

# ============= START BODY OF SCRIPT =================

set argv = (`getopt hr:c: ${argu}`)

while ("$argv[1]" != "--")
    switch ($argv[1])
	case -c:
	    set commExp = $argv[2]; shift argv; breaksw
    endsw
    shift argv
end
shift argv

if (! $?commExp) then
    set commExp = 'historical'
endif

echo ""
echo " Cleaning up $TMPDIR"
echo "--------------------"

wipetmp

echo ""
echo ""
echo " Beginning PCMDI Metrics Evaluation"
echo "-----------------------------------"

set WORKDIR = `mktemp -d -p $TMPDIR`
cd ${WORKDIR}

echo " Set workDir: $WORKDIR"
echo ""
echo " DMGetting files"
echo "----------------"

set get_files = `dir -l $in_data_dir/$realm.$yr1-$yr2.* | rev | cut -d ' ' -f 1 | rev `
dmget $get_files

echo ""
echo " Copying files to $WORKDIR"
echo "--------------------------"

foreach file ( $get_files )
    gcp -cd -v $file $WORKDIR/
end

set files = `dir -l $WORKDIR/* | rev | cut -d ' ' -f 1 | rev`
set output_file = `echo $files | cut -d ' ' -f 1 | sed 's/\.[[:digit:]]\+\./\./g'`

echo ""
echo " Creating output_file: $output_file with ncrcat"
echo "-----------------------------------------------"

ncrcat -h -O $files $output_file

rm -f $files

echo ""
echo " Splitting $output_file into shards"
echo "-----------------------------------"

if ( ${realm} == "atmos" ) then
    set gfdl_vars = 'hght,olr,olr_clr,precip,slp,swup_toa,swup_toa_clr,t_ref,temp,u_ref,ucomp,v_ref,vcomp,land_mask'
    set vars = "'pr','psl','rlut','rlutcs','rsut','rsutcs','ta_200','ta_850','tas','ua_200','ua_850','va_200','va_850','zg_500'"
else if ( ${realm} == "atmos_cmip" ) then
    set gfdl_vars = 'pr,psl,rlut,rlutcs,rsut,rsutcs,ta_unmsk,tas,ua_unmsk,uas,vas,va_unmsk,zg_unmsk,sftlf'
    set vars = "'pr','psl','rlut','rlutcs','rsut','rsutcs','ta_200','ta_850','tas','ua_200','ua_850','va_200','va_850','zg_500'"
endif 

split_ncvars.csh -v $gfdl_vars  -o $WORKDIR/ $output_file

rm -f $output_file

echo ""
echo " Translating GFDL Variables to CMIP5 Variables"
echo "----------------------------------------------"

# Create a list of intermediate files to clean up later
cd $WORKDIR
set intermediate_files = `dir -l $WORKDIR | grep .nc | rev | cut -d ' ' -f 1 | rev `

python $FRE_ANALYSIS_HOME/eem/code/pcmdi_metrics/createXmlAndNcs_cmip.py -i $WORKDIR/ -y $yr1,$yr2 -d $descriptor -r ${realm}

# Clean up aforementioned intermediate files
foreach file ( $intermediate_files )
    rm -f $file 
end

rm -f ./*.xml # remove the translation XML

echo ""
echo " Creating input parameters file"
echo "-------------------------------"

cat <<EOF >> wgne_input_parameters.py
import  genutil

################################################################################
#  OPTIONS ARE SET BY USER IN THIS FILE AS INDICATED BELOW BY: 
#
################################################################################

## RUN IDENTIFICATION
# DEFINES A SUBDIRECTORY TO METRICS OUTPUT RESULTS SO MULTIPLE CASES CAN BE COMPARED
case_id = '${descriptor}'

# LIST OF MODEL VERSIONS TO BE TESTED - WHICH ARE EXPECTED TO BE PART OF CLIMATOLOGY FILENAME
model_versions = ['${descriptor}',]

### VARIABLES AND OBSERVATIONS TO USE
vars = [${vars}]

# Observations to use at the moment "default" or "alternate"
ref = 'default'
ext = '.nc' ; # '.xml'

# INTERPOLATION OPTIONS
targetGrid        = '2.5x2.5' # OPTIONS: '2.5x2.5' or an actual cdms2 grid object
regrid_tool       = 'esmf' #'regrid2' # OPTIONS: 'regrid2','esmf' ### CURRENTLY THERE IS A BUG WITH REGRID2 -- DO NOT USE!!!!
regrid_method     = 'linear'  # OPTIONS: 'linear','conservative', only if tool is esmf
regrid_tool_ocn   = 'esmf'    # OPTIONS: "regrid2","esmf" ### CURRENTLY THERE IS A BUG WITH REGRID2 -- DO NOT USE!!!!
regrid_method_ocn = 'linear'  # OPTIONS: 'linear','conservative', only if tool is esmf

# SIMULATION PARAMETERS
period = '${yr1}-${yr2}'
realization = '${rip}'

# SAVE INTERPOLATED MODEL CLIMATOLOGIES ?
save_mod_clims = True # True or False

## DATA LOCATION: MODELS, OBS AND METRICS OUTPUT

## Templates for climatology files
## TEMPLATE EXAMPLE: cmip5.GFDL-ESM2G.historical.r1i1p1.mo.atm.Amon.rlut.ver-1.1980-1999.AC.nc

filename_template = "%(variable)_%(model_version)_%(table)_historical_%(realization)_%(period)-clim.nc"

## dictionary for custom %(keyword) designed by user
# Driver will match each key to its value defined by a variable name OR all if variable name is not present, OR "" if "all" is not defined
#custom_keys = { "key1": {"all":"key1_value_for_all_var", "tas" : "key1_value_for_tas"},
#    }

## ROOT PATH FOR MODELS CLIMATOLOGIES
mod_data_path = '${WORKDIR}'

## ROOT PATH FOR OBSERVATIONS
obs_data_path = '/work/mdteam/pcmdi_metrics/obs/'

## DIRECTORY WHERE TO PUT RESULTS
metrics_output_path = '${WORKDIR}/output/metrics/'
## DIRECTORY WHERE TO PUT INTERPOLATED MODELS' CLIMATOLOGIES
model_clims_interpolated_output = '${WORKDIR}/output/climatologies/'
## FILENAME FOR INTERPOLATED CLIMATOLGIES OUTPUT
filename_output_template = "%(model_version).historical.r1i1p1.mo.%(table_realm).%(variable)%(level).ver-1.%(period).interpolated.%(regridMethod).%(targetGridName).AC%(ext)"

EOF

pcmdi_metrics_driver.py -p wgne_input_parameters.py
#$FRE_ANALYSIS_HOME/eem/code/pcmdi_metrics/wgne_metrics_driver.py -p wgne_input_parameters.py

#echo ""
#echo " Statistics generated, running box plot tool "
#echo "---------------------------------------------"
#module unload python
#module load python
#
#python ${FRE_ANALYSIS_HOME}/eem/code/pcmdi_metrics/cmip_boxplots.py --workflow -c ${commExp} -i ${WORKDIR}/output -e ${descriptor} -y ${yr1},${yr2}

echo ""
echo " PCMDI Metrics Package completed and transfering output"
echo "-------------------------------------------------------"

if ( ! -d ${out_dir}/${realm}_${yr1}_${yr2}/pcmdi_metrics_${pcmdi_version} ) then
    mkdir -p ${out_dir}/${realm}_${yr1}_${yr2}/pcmdi_metrics_${pcmdi_version} 
endif
cd $WORKDIR/output
set dirs = `find . -maxdepth 1 -type d`
foreach dir ($dirs)
    gcp -r -cd -v ${dir}/ ${out_dir}/${realm}_${yr1}_${yr2}/pcmdi_metrics_${pcmdi_version}/
end

# Leave the python virtual environment
deactivate
exit
